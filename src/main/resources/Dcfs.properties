#admin ws<
dcfs.admin.login=nimble
dcfs.admin.password=nimble

#if (false) system starts but wait admin ws - /dcfs/admin/restartSystem/userAdmin/passwordAdmin - to be called in order to create all Streams framework
dcfs.admin.autoinitialize=false

#if (false) only create if not exists; if (true) drop topic if exists and then recreate it empty;
dcfs.topics.recreate=true
#if (false) only create if not exists; if (true) drop streams if exists and then recreate it empty (warning, cause Exception in some kafka version)
dcfs.streams.recreate=false

dcfs.custom.autostartCustomInitializer=false
#list of com.nimble.dcfs.CustomSystemInitializer
#dcfs.custom.CustomSystemInitializer0=com.nimble.dcfs.custom.producer.WhirpoolSystemInitializer
dcfs.custom.CustomSystemInitializer0=com.nimble.dcfs.custom.producer.DemoSystemInitializer

#manage topics
bootstrap.servers=192.168.56.102:9092
acks=0
producer.type=sync
retries=0
batch.size=0
linger.ms=5
metadata.max.age.ms=1000
buffer.memory=33554432
key.serializer=org.apache.kafka.common.serialization.StringSerializer
value.serializer=org.apache.kafka.common.serialization.StringSerializer
client.id=nimble
application.id=nimble

#server for creating topic
zookeeper.connect=192.168.56.102:2181
zookeeper.sessionTimeoutMs=10000
zookeeper.connectionTimeout=5000
zookeeper.partitions=1
zookeeper.replications=1

#configuration for data filtering
ksql.service.id=nimble
ksqlUrl=http://192.168.56.102:8088
##default value (latest|earliest)
ksql.streams.auto.offset.reset=earliest

