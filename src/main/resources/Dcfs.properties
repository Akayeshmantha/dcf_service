#admin ws
dcfs.admin.login=nimble
dcfs.admin.password=nimble

#if (false) system starts but wait admin ws - /dcfs/admin/restartSystem/userAdmin/passwordAdmin - to be called in order to create all Streams framework
dcfs.admin.autoinitialize=true

#if (false) only create if not exists; if (true) drop topic if exists and then recreate it empty;
dcfs.topics.create=false
dcfs.topics.recreate=false
#if (false) only create if not exists; if (true) drop streams if exists and then recreate it empty (warning, cause Exception in some kafka version)
dcfs.streams.recreate=true

#server Nimble identity-service (will be used in next releases - if null use internal dcfs service)
dcfs.nimble.NimbleIdentityService=
#192.168.1.12/identity-service

#se assente \u00e8 attivo solo il servizio di filtri sui dati
dcfs.topic.producer.propertiesfile=
#dcfs.topic.producer.propertiesfile = DcfsProducer
#se assente \u00e8 attivo solo il servizio di scrittura dei dati
dcfs.topic.consumer.propertiesfile = IbmConsumer
