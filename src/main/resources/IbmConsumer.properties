dcfs.useRestForTopic=true
dcfs.verifyGrantForTopic=false
dcfs.producer.sleepMsAfterLastMessage=0
dcfs.maxrowresultset=100
dcfs.timeoutquery=60000
dcfs.kafkaUseSSL=true
# this environment variable will be mandatory if useSSL is true
# dcfs_kafka_ssl_login=token
# dcfs_kafka_ssl_password=ibmapikey

adminRestURL=https://kafka-admin-prod02.messagehub.services.eu-gb.bluemix.net:443


bootstrap.servers=kafka03-prod02.messagehub.services.eu-gb.bluemix.net:9093,kafka02-prod02.messagehub.services.eu-gb.bluemix.net:9093,kafka05-prod02.messagehub.services.eu-gb.bluemix.net:9093,kafka01-prod02.messagehub.services.eu-gb.bluemix.net:9093,kafka04-prod02.messagehub.services.eu-gb.bluemix.net:9093
compression.type=none
security.protocol=SASL_SSL
ssl.protocol=TLSv1.2
ssl.enabled.protocols=TLSv1.2
sasl.mechanism=PLAIN
#this will be in environment variable
sasl.jaas.config=org.apache.kafka.common.security.plain.PlainLoginModule required username="$dcfs_kafka_ssl_login" password="$dcfs_kafka_ssl_password";
ssl.endpoint.identification.algorithm=HTTPS
key.serializer=org.apache.kafka.common.serialization.StringSerializer
value.serializer=org.apache.kafka.common.serialization.StringSerializer
acks=1
compression.type=none
client.id=nimble
application.id=nimble
auto.offset.reset=earliest


#Ksql
ksql.service.id=nimble
#ksqlUrl=http://192.168.56.105:8088
ksqlUrl=http://dcfsksql:8088
ksql.streams.auto.offset.reset=earliest
